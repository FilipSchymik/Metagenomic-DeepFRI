name: Package

on:
  push:
    tags:
      - v*

jobs:

  wheel-linux-aarch64:
    name: Build Linux wheels (Aarch64)
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-tag:
        - cp311-manylinux_aarch64
    steps:
    - uses: actions/checkout@v4
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.18.1
      env:
        CIBW_ARCHS: aarch64
        CIBW_BUILD: ${{ matrix.python-tag }}
        CIBW_BEFORE_BUILD: pip install cython
        CIBW_BUILD_VERBOSITY: 2
        # CIBW_TEST_COMMAND: python -m unittest mDeepFRI.tests -vv
        CIBW_TEST_REQUIRES: importlib-resources
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  wheel-linux-x86_64:
    name: Build Linux wheels (x86-64)
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-tag:
        - cp311-manylinux_x86_64
    steps:
    - uses: actions/checkout@v4
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.18.1
      env:
        CIBW_ARCHS: x86_64
        CIBW_BUILD: ${{ matrix.python-tag }}
        CIBW_BEFORE_BUILD: pip install cython
        CIBW_BUILD_VERBOSITY: 2
        # CIBW_TEST_COMMAND: python -m unittest mDeepFRI.tests -vv
        CIBW_TEST_REQUIRES: importlib-resources
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  wheel-macos-x86_64:
    name: Build MacOS wheels (x86-64)
    runs-on: macOS-11
    strategy:
      matrix:
        python-tag:
        - cp311-macosx_x86_64
    steps:
    - uses: actions/checkout@v4
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.18.1
      env:
        CIBW_ARCHS: x86_64
        CIBW_BUILD: ${{ matrix.python-tag }}
        CIBW_BEFORE_BUILD: pip install cython
        CIBW_BUILD_VERBOSITY: 2
        # CIBW_TEST_COMMAND: python -m unittest mDeepFRI.tests -vv
        CIBW_TEST_REQUIRES: importlib-resources
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  wheel-macos-aarch64:
    name: Build MacOS wheels (Aarch64)
    runs-on: macOS-11
    strategy:
      matrix:
        python-tag:
        - cp38-macosx_arm64
        - cp39-macosx_arm64
        - cp310-macosx_arm64
        - cp311-macosx_arm64
        - cp312-macosx_arm64
    steps:
    - uses: actions/checkout@v4
    - name: Build manylinux wheels
      uses: pypa/cibuildwheel@v2.18.1
      env:
        CIBW_ARCHS: arm64
        CIBW_BUILD: ${{ matrix.python-tag }}
        CIBW_BEFORE_BUILD: pip install cython
        CIBW_BUILD_VERBOSITY: 2
        # CIBW_TEST_COMMAND: python -m unittest mDeepFRI.tests -vv
        CIBW_TEST_REQUIRES: importlib-resources
      with:
        output-dir: dist
    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist/*

  sdist:
    runs-on: ubuntu-latest
    name: Build source distribution
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install build requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build source distribution
      run: python setup.py sdist
    - name: Store built source distribution
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*

  test-sdist:
    runs-on: ubuntu-latest
    name: Test source distribution
    needs:
    - sdist
    steps:
    - name: Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
          name: wheels
          path: dist/
    - name: Update pip to latest version
      run: python -m pip install -U pip setuptools wheel
    - name: Install built wheel
      run: python -m pip install --no-binary mDeepFRI --find-links=dist mDeepFRI
    # - name: Run tests without coverage
      # run: python -m unittest mDeepFRI.tests -vv

  upload:
    environment: PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    name: Upload
    needs:
    - sdist
    - test-sdist
    - wheel-linux-aarch64
    - wheel-linux-x86_64
    - wheel-macos-aarch64
    - wheel-macos-x86_64
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist
    - uses: pypa/gh-action-pypi-publish@release/v1
      if: startsWith(github.ref, 'refs/tags')

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "!contains(github.ref, 'rc')"
    name: Release
    needs: upload
    steps:
    - uses: actions/checkout@v4
    - uses: rasmus-saks/release-a-changelog-action@v1.0.1
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
